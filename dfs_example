class Point {
    	int x; int y;
 	... конструктор и прочая лабуда
}
 
void bfs(int table[][]){
 	boolean visited[][] = new… // посещенные клетки
 	Point start  = new Point(0, 0); // начальная точка
 	Queue<Point> q = new LinkedList<Point>();
 	q.push(start);
 
 	while (!q.isEmpty()){
	 	Point head = q.pop();
		посещаем table[head.x][head.y]
		visited[head.x][head.y] = true;
 
 		//если ходить только в 4 соседние точки. Стандартный способ сгенерировать координаты соседей:
 		int dx[] = {1, -1, 0, 0};
 		int dy[] = {0, 0, 1, -1};
 		for (int i=0;i<4;i++){
 			if (!visited[head.x+dx[i]][head.y+dy[i]]){ // если клетка не посещена
 				q.push(new Point(head.x+dx[i], head.y+dy[i])); // добавить в очередь на посещение
 	 		}
 		}
  
  		//если ходить можно по 8 соседним точкам:
		int dx[] = {-1, 0, 1};
  		for (int i=0;i<3;i++){
 	  		for (int j=0;j<3;j++){
 
 		  		if (!visited[head.x+dx[i]][head.y+dy[j]] && !(i==1 && j==1 )){ // если клетка не посещена и это не текущая клетка - смещение по  x и y нет
 			  		q.push(new Point(head.x+dx[i], head.y+dx[j])); // добавить в очередь на посещение
 	 	  		}
 	  		}
 	  
  		}
	}
}
